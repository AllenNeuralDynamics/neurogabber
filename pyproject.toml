[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "neurogabber"
description = "Generated from aind-library-template"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [
    {name = "Allen Institute for Neural Dynamics"}
]
classifiers = [
    "Programming Language :: Python :: 3"
]
readme = "README.md"
dynamic = ["version"]

dependencies = [
    "boto3>=1.40.22",
    "cloud-volume>=12.5.0",
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "numpy>=2.2.6",
    "openai>=1.104.2",
    "pillow>=11.3.0",
    "polars>=1.33.0",
    "pydantic>=2.11.7",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.20",
    "uvicorn[standard]>=0.35.0",
]

[dependency-groups]
dev = [
    "black",
    'coverage',
    "flake8",
    "interrogate",
    'isort',
    'Sphinx',
    'furo',
    "ruff>=0.12.11",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
]
panel = [
    "panel>=1.7.5",
    "panel-neuroglancer>=0.1.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "neurogabber.__version__"}

[tool.black]
line-length = 79
target_version = ['py310']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | .conda
  )/
  | .gitignore
)
'''

[tool.coverage.run]
omit = ["*__init__*"]
source = ["neurogabber", "tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "^from .* import .*",
    "^import .*",
    "pragma: no cover"
]
fail_under = 100

[tool.isort]
line_length = 79
profile = "black"
skip = [".conda"]

[tool.interrogate]
exclude = ["setup.py", "docs", "build", ".conda"]
fail-under = 100
